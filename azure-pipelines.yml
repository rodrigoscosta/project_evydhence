trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  group: pipeline-app
  buildConfiguration: 'Release'
  outputDirectory: '$(Build.ArtifactStagingDirectory)\apks'
  clientesPath: 'assets\clientes'
  apkName: 'Consorcio'

stages:
- stage: Build
  jobs:
  - job: BuildApks
    steps:
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '11'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
      displayName: 'Instalar Java 11'

    - task: FlutterInstall@0
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'custom'
        customVersion: '3.22.0'

    - powershell: |
        $ErrorActionPreference = 'Stop'
        Write-Host "Iniciando build para todos os clientes..."

        # Obter a versão do aplicativo a partir do pubspec.yaml
        $versionApp = (Select-String -Path "pubspec.yaml" -Pattern "^version:" | ForEach-Object { $_.Line.Split(' ')[1].Split('+')[0] }).Trim()
        Write-Host "Versão do aplicativo: $versionApp"

        # Exportar a versão como uma variável de ambiente do pipeline
        Write-Host "##vso[task.setvariable variable=versionApp]$versionApp"
        
        Get-ChildItem -Path "$(Build.SourcesDirectory)\$(clientesPath)" -Directory | ForEach-Object {
          $cliente = $_.Name
          $clientePath = "$(Build.SourcesDirectory)\$(clientesPath)\$cliente"
          $arquivoJks = "$(clientesPath)\$cliente\android-key\$cliente.jks"
          $apkName = "Consorcio"

          if (-Not (Test-Path -Path $arquivoJks)) {
            Write-Host "Arquivo JKS não encontrado para o cliente: $cliente. Pulando este cliente."
            return
          }

          Write-Host "Cliente: $cliente"
          Write-Host "Sobrescrevendo arquivos de configuracao..."

          Copy-Item "$clientePath\Icons\" -Destination "android\app\src\main\res\" -Recurse -Force -ErrorAction SilentlyContinue
          Copy-Item "$clientePath\dotenv" -Destination "dotenv" -Force -ErrorAction SilentlyContinue
          Copy-Item "$clientePath\dotenv" -Destination "assets\dotenv" -Force -ErrorAction SilentlyContinue
          Copy-Item "$clientePath\AndroidManifest.xml" -Destination "android\app\src\main\AndroidManifest.xml" -Force -ErrorAction SilentlyContinue
          Copy-Item "$clientePath\AndroidManifest.xml" -Destination "android\app\src\debug\AndroidManifest.xml" -Force -ErrorAction SilentlyContinue
          Copy-Item "$clientePath\build.gradle" -Destination "android\app\build.gradle" -Force -ErrorAction SilentlyContinue
          Copy-Item "$clientePath\MainActivity.kt" -Destination "android\app\src\main\kotlin\com\example\project_evydhence\MainActivity.kt" -Force -ErrorAction SilentlyContinue
          Copy-Item "$clientePath\key.properties" -Destination "android\key.properties" -Force -ErrorAction SilentlyContinue
          Copy-Item "$clientePath\images\background.png" -Destination "images\background.png" -Force -ErrorAction SilentlyContinue
          Copy-Item "$clientePath\images\icon.png" -Destination "images\icon.png" -Force -ErrorAction SilentlyContinue

          if (Test-Path -Path "android\app\src\main\kotlin\com\example\project_evydhence\MainActivity.kt") {
            Write-Host "MainActivity.kt encontrado e copiado."
          } else {
            Write-Host "MainActivity.kt não encontrado. Pulando cópia deste arquivo."
          }

          Write-Host "Limpando build anterior..."
          flutter clean

          Write-Host "Gerando APK release nao assinado..."
          flutter build apk

          # Caminho do APK gerado
          $apkPath = "build\app\outputs\flutter-apk\app-release.apk"

          # Novo nome para o APK, mas com o caminho completo
          $novoApkPath = "$(Build.SourcesDirectory)\build\app\outputs\flutter-apk\$cliente$apkName-app-release.apk"

          # Renomeando o APK gerado para NomeCliente-app-release.apk
          if (Test-Path -Path $apkPath) {
            Rename-Item -Path $apkPath -NewName $novoApkPath -Force
            Write-Host "APK renomeado para $novoApkPath"           
          } else {
              Write-Host "Erro: O arquivo $apkPath não foi encontrado."
          }

          Write-Host "Gerando AAB nao assinado..."
          flutter build appbundle

          # Caminho do AAB gerado
          $aabPath = "build\app\outputs\bundle\release\app-release.aab"

          # Novo nome para o AAB, mas com o caminho completo
          $novoAabPath = "$(Build.SourcesDirectory)\build\app\outputs\bundle\release\$cliente$apkName-app-release.aab"

          # Renomeando o AAB gerado para NomeCliente-app-release.aab"
          if (Test-Path -Path $aabPath) {
            Rename-Item -Path $aabPath -NewName $novoAabPath -Force
            Write-Host "AAB renomeado para $novoAabPath"           
          } else {
              Write-Host "Erro: O arquivo $aabPath não foi encontrado."
          }

          Write-Host "Processo de assinatura do AAB..."
          $password = $cliente.ToLower()  # Converte o nome do cliente para minúsculas
          Write-Host "Keystore path: $arquivoJks"
          Write-Host "Keystore password: $password"
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore "$arquivoJks" -storepass "$password" $novoAabPath "$cliente"

          # Certifica-se de que o diretório de saída exista
          $destinationDir = "$env:outputDirectory"
          if (-Not (Test-Path -Path $destinationDir)) {
            New-Item -Path $destinationDir -ItemType Directory | Out-Null
          }

          # Copiando o AAB assinado e o APK para a pasta apks\
          Copy-Item $novoAabPath -Destination "$destinationDir\$cliente$apkName-Assinado.aab" -Force -ErrorAction SilentlyContinue
          Copy-Item $novoApkPath -Destination "$destinationDir\$cliente$apkName-Assinado.apk" -Force -ErrorAction SilentlyContinue
        }
      displayName: 'Build dos APKs para todos os clientes'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(outputDirectory)'
        artifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publicação dos apks e abbs gerados na pasta apks\'
          
    - task: sftpupload@1
      inputs:
        sourceFolder: '$(Build.ArtifactStagingDirectory)\apks'
        contents: '**/*.apk'
        targetFolder: '/Clientes/Ancora/Sinqia_Para_Ancora/AppConsorcio-v$(versionApp)'
        host: 'sftp.sinqia.com.br'
        port: '22'
        username: $(usersftp)
        password: $(passwordsftp)